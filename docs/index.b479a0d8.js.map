{"mappings":"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","sources":["homeworks/hw8/animation.js"],"sourcesContent":["var params = { fullscreen: false };\nconst elem = document.createElement('div')\n/**\n * TODO გაცენტრვა :')\n * ანუ 640 px ხელით არ უნდა ქონდეს მითითებული, \n * შიგნითა svg რამდენიცაა იმდენი უნდა იყოს\n */\nelem.style = `\n    width: 640px;\n    margin: auto;\n`\ndocument.body.appendChild(elem)\nvar animation = new Two(params).appendTo(elem);\n\nvar registeredObjects = []\nvar cx = animation.width * 0.5;\nvar cy = animation.height * 0.5;\n\nfunction launch() {\n    let shapes = registeredObjects.map(e => e.shape)\n    var group = animation.makeGroup(...shapes);\n    group.position.set(cx, cy);\n    animation.play()\n}\n\nclass Shape {\n    constructor(x, y) {\n        this.x = x\n        this.y = y\n        registeredObjects.push(this)\n    }\n\n    setColor(color) {\n        this.shape.fill = color\n    }\n\n    update() {\n        this.shape.position.set(this.x, this.y)\n        this.shape.scale = this.scale\n    }\n}\n\nclass Triangle extends Shape {\n\tconstructor(x, y, radius, scale) {\n        super(x, y)\n\t\tthis.shape = animation.makePolygon(x, y, radius, 3)\n        this.radius = radius\n        this.scale = scale\n        this.shape.scale = scale\n\t}\n\n    setFill(url) {\n        this.texture = new Two.Texture(url, () => {\n            this.shape.noStroke().fill = this.texture\n        })\n       \n    }\n}\n\nclass Light extends Shape {\n    constructor(x, y, radius, scale) {\n        super(x, y)\n\t\tthis.shape = animation.makeCircle(x, y, radius, 3)\n        this.radius = radius\n        this.scale = scale\n        this.shape.scale = scale\n        this.type = 'light'\n    }\n}\n\nclass Message extends Shape {\n    constructor(x, y, message) {\n        super(x, y)\n        this.shape = animation.makeText(message, x, y)\n    }\n}\n\n\nwindow.onload = () => {\n    window.config = createConfig()\n    if (makeChristmasTree) {\n        makeChristmasTree()\n        launch()\n    }\n    \n}\nlet animationCount = 0\nlet defaultDelay = 150\nwindow.animate = (obj) => {\n    obj.update = () => obj.targets.update()\n    let delay = animationCount*defaultDelay\n    if (obj.targets.type == 'light') {\n        delay = config.triangleCount*defaultDelay + animationCount*30\n    }\n    setTimeout(() => {\n        anime(obj)\n    },  delay)\n    animationCount++   \n}"],"names":[],"version":3,"file":"index.b479a0d8.js.map","sourceRoot":"/__parcel_source_root/"}